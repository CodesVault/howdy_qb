{"/":{"title":"Introduction","data":{"":"Relational Database Query builder for WordPress.\nWP Query Builder uses PDO for database queries.\nIt has zero dependencies with third-party query builders or any other composer library.\nWP QueryBuilder Supports PHP >= 7.1"}},"/another":{"title":"Another Page","data":{"":"let a = 1;\n\nconsole.log(a);","component#Component":"","external-component#External Component":""}},"/advanced":{"title":"Advanced (A Folder)","data":{"":"This is the index page for the Advanced folder!"}},"/advanced/satori":{"title":"Satori","data":{"":"Satori (悟り) is a Japanese Buddhist term for awakening, \"comprehension; understanding\"."}},"/about":{"title":"About","data":{"":"This is the about page! This page is shown on the navbar."}},"/test":{"title":"Test","data":{"":""}},"/documentation":{"title":"Documentation","data":{"":"","installations#Installations":"Install using composer composer require codesvault/howdy_qb"}},"/documentation/start":{"title":"Start","data":{"":"","installation#Installation":"Install using composer composer require codesvault/howdy_qb"}},"/documentation/installation":{"title":"Installation","data":{"":"","installation#Installation":"Install using composer composer require codesvault/howdy_qb.","database-connection#Database connection":"It connects to the WordPress database automatically."}},"/example/create-statement":{"title":"Create Statement","data":{"":"Create a Database table.\nDB::create('querybuilder')\n->column('ID')->bigInt()->unsigned()->autoIncrement()->primary()->required()\n->column('name')->string(255)->required()\n->column('email')->string(255)->default('NULL')\n->index(['ID'])\n->execute();\n\n\nUse of foreignKey\nDB::create('howdy_qb')\n->column('name')->string(255)->required()\n->column('email')->string(255)->required()\n->column('howdyID')->bigInt()->unsigned()\n->foreignKey('howdyID', 'howdy', 'ID')\n->execute();"}},"/documentation/select-api":{"title":"Select API","data":{"":"function distinct(): self;\n\nfunction columns(...$columns): self;\n\nfunction alias(string $name): self;\n\nfunction from(string $table_name): self;\n\nfunction join($table_name, string $col1 = null, string $col2 = null): self;\n\nfunction innerJoin($table_name, string $col1 = null, string $col2 = null): self;\n\nfunction leftJoin($table_name, string $col1 = null, string $col2 = null): self;\n\nfunction rightJoin($table_name, string $col1 = null, string $col2 = null): self;\n\nfunction where($column, ?string $operator = null, ?string $value = null): self;\n\nfunction andWhere(string $column, ?string $operator, ?string $value): self;\n\nfunction orWhere(string $column, ?string $operator, ?string $value): self;\n\nfunction whereNot(string $column, ?string $operator, ?string $value): self;\n\nfunction andNot(string $column, ?string $operator, ?string $value): self;\n\nfunction whereIn(string $column, ...$value): self;\n\nfunction orderBy($column, string $sort): self;\n\nfunction groupBy($column): self;\n\nfunction limit(int $count): self;\n\nfunction offset(int $count): self;\n\nfunction count(string $column, string $alias = ''): self;\n\nfunction raw(string $sql): self;\n\nfunction getSql();\n\nfunction get();"}}}